name: Test Package
on:
  workflow_dispatch:
    inputs:
      run_id:
        description: workflow run id
        default: latest
        required: true
      rev_id:
        description: build revision id
        default: '0'
        required: true

jobs:
  package:
    name: Build packages
    runs-on: windows-2022
    environment: publish-test

    steps:
      - name: Clone project
        uses: actions/checkout@v3

      - name: Install AzureSignTool
        run: |
          dotnet tool install --global AzureSignTool

      - name: Download Windows Terminal
        shell: pwsh
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          $RunId = '${{ inputs.run_id }}'
          if ($RunId -eq 'latest') {
            $RunId = $(gh run list -w 'Windows Terminal' --json 'status,databaseId,conclusion') |
              ConvertFrom-Json | Where-Object { ($_.status -eq 'completed') -and ($_.conclusion -eq 'success') } |
              Select-Object -First 1 -ExpandProperty databaseId
          }
          Write-Host "Downloading run $RunId"
          & gh run download $RunId
          Get-ChildItem */*.zip | ForEach-Object {
            if ($_.BaseName -Match "WindowsTerminal-(\d+.\d+.\d+.\d+)-(.*)") {
              $Version = $Matches[1]
              $Architecture = $Matches[2]
              $Destination = "runtimes/win-${Architecture}/native/wt"
              New-Item $Destination -ItemType Directory -Force | Out-Null
              Expand-Archive $_.FullName $Destination
              Remove-Item $_.FullName
              Remove-Item $_.Directory -ErrorAction SilentlyContinue
            }
          }
          $RevId = '${{ inputs.rev_id }}'
          $Version -Replace "(\d+).(\d+).(\d+).(\d+)", "`$1.`$2.`$3.$RevId"
          New-Item .\package -ItemType Directory -ErrorAction SilentlyContinue | Out-Null
          Set-Content -Path .\VERSION -Value $Version -NoNewLine -Force
          Set-Content -Path .\package\VERSION -Value $Version -NoNewLine -Force

      - name: Code sign Windows Terminal
        shell: pwsh
        run: |
          $Params = @('sign',
            '-kvt', '${{ secrets.AZURE_TENANT_ID }}',
            '-kvu', '${{ secrets.CODE_SIGNING_KEYVAULT_URL }}',
            '-kvi', '${{ secrets.CODE_SIGNING_CLIENT_ID }}',
            '-kvs', '${{ secrets.CODE_SIGNING_CLIENT_SECRET }}',
            '-kvc', '${{ secrets.CODE_SIGNING_CERTIFICATE_NAME }}',
            '-tr', '${{ vars.CODE_SIGNING_TIMESTAMP_SERVER }}',
            '-v')
          foreach ($Architecture in @('x64', 'arm64')) {
            $WtDir = "runtimes/win-${Architecture}/native/wt"
            Get-ChildItem -Path "$WtDir/*" -Include @("*.exe","*.dll") -Exclude @("*.Xaml*.dll") | ForEach-Object {
              AzureSignTool @Params $_.FullName
            }
          }

      - name: Build zip package
        shell: pwsh
        run: |
          $Version = Get-Content -Path .\VERSION
          Write-Host "Package Version: $Version"
          New-Item -Path "./package" -ItemType Directory -Force | Out-Null
          foreach ($Architecture in @('x64', 'arm64')) {
            $WtDir = "runtimes/win-${Architecture}/native/wt"
            $ZipFile = "WindowsTerminal-${Version}-${Architecture}.zip"
            Compress-Archive -Path "$WtDir/*" -CompressionLevel Optimal -DestinationPath "./package/${ZipFile}"
          }

      - name: Code sign zip package
        shell: pwsh
        run: |
          $Params = @('sign',
            '-kvt', '${{ secrets.AZURE_TENANT_ID }}',
            '-kvu', '${{ secrets.CODE_SIGNING_KEYVAULT_URL }}',
            '-kvi', '${{ secrets.CODE_SIGNING_CLIENT_ID }}',
            '-kvs', '${{ secrets.CODE_SIGNING_CLIENT_SECRET }}',
            '-kvc', '${{ secrets.CODE_SIGNING_CERTIFICATE_NAME }}',
            '-tr', '${{ vars.CODE_SIGNING_TIMESTAMP_SERVER }}',
            '-v')
          Install-Module -Name Devolutions.Authenticode -Force
          Get-ChildItem -Path "./package/*.zip" | ForEach-Object {
            $ZipFile = $_.FullName
            Get-ZipAuthenticodeDigest $ZipFile -Export
            AzureSignTool @Params "${ZipFile}.sig.ps1"
            Import-ZipAuthenticodeSignature $ZipFile -Remove
          }

      - name: Build nuget package
        shell: pwsh
        run: |
          $Version = Get-Content -Path .\VERSION
          Write-Host "Package Version: $Version"
          dotnet pack .\dotnet\Devolutions.WindowsTerminal -c Release -o package /p:Version=$Version

      - name: Build MSI package
        shell: pwsh
        run: |
          $Version = Get-Content -Path .\VERSION
          Write-Host "Package Version: $Version"
          dotnet tool install --global wix --version 4.0.0-preview.1
          $WixVariables = Get-Content .\installer\Variables.wxi
          $WixVariables = $WixVariables -Replace 'ProductVersion = "([^"]*)"', "ProductVersion = `"$Version`""
          Set-Content .\installer\Variables.wxi $WixVariables
          foreach ($Architecture in @('x64', 'arm64')) {
            dotnet build /p:Configuration=Release /p:Platform=${Architecture} installer/WindowsTerminal.sln
            Move-Item ./installer/bin/${Architecture}/Release/en-US/WindowsTerminal.msi ./package/WindowsTerminal-${Version}-${Architecture}.msi
          }

      - name: Code sign MSI package
        shell: pwsh
        run: |
          $Params = @('sign',
            '-kvt', '${{ secrets.AZURE_TENANT_ID }}',
            '-kvu', '${{ secrets.CODE_SIGNING_KEYVAULT_URL }}',
            '-kvi', '${{ secrets.CODE_SIGNING_CLIENT_ID }}',
            '-kvs', '${{ secrets.CODE_SIGNING_CLIENT_SECRET }}',
            '-kvc', '${{ secrets.CODE_SIGNING_CERTIFICATE_NAME }}',
            '-tr', '${{ vars.CODE_SIGNING_TIMESTAMP_SERVER }}',
            '-v')
          Get-ChildItem .\package\*.msi | ForEach-Object {
            AzureSignTool @Params $_.FullName
          }

      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: wt-release
          path: package/*
