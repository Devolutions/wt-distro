name: Windows Terminal
on:
  workflow_dispatch:
    inputs:
      git_ref:
        description: 'upstream git ref'
        default: "v1.16.10231.0"
        required: true
      version:
        description: 'build version'
        default: "1.16.10231.0"
        required: true

jobs:
  build:
    name: Windows Terminal [${{matrix.arch}}]
    runs-on: ${{matrix.runner}}
    strategy:
      fail-fast: true
      matrix:
        arch: [ x64, arm64 ]
        os: [ windows ]
        include:
          - os: windows
            runner: windows-2022
  
    steps:
      - name: Clone project
        uses: actions/checkout@v3

      - name: Clone Windows Terminal ${{github.event.inputs.git_ref}}
        uses: actions/checkout@v3
        with:
          repository: microsoft/terminal
          ref: ${{github.event.inputs.git_ref}}
          submodules: true
          path: WindowsTerminal

      - name: Patch Windows Terminal
        shell: pwsh
        working-directory: WindowsTerminal
        run: |          
          git apply ../patches/add-wt-base-settings-path-env-var.patch --ignore-whitespace
          git apply ../patches/add-wt-parent-window-handle-env-var.patch --ignore-whitespace
          git apply ../patches/fix-wt-release-manifest-proxy-stub-clsids.patch --ignore-whitespace
          git apply ../patches/add-wt-version-rc-files-to-projects.patch --ignore-whitespace
          git apply ../patches/enable-wt-hybrid-crt-use-static-msvc-runtime.patch --ignore-whitespace

          ..\scripts\SetVersionInfo.ps1 (Get-Location).Path "${{github.event.inputs.version}}"

          Copy-Item ..\resources\images-rdm .\res\terminal -Recurse -Force
          Copy-Item ..\resources\terminal.ico .\res\terminal.ico -Force
          Remove-Item .\res\terminal\images -Recurse -Force
          Remove-Item .\res\terminal\images-Dev -Recurse -Force
          Remove-Item .\res\terminal\images-Pre -Recurse -Force
          Copy-Item .\res\terminal\images-rdm .\res\terminal\images -Recurse -Force
          Copy-Item .\res\terminal\images-rdm .\res\terminal\images-Dev -Recurse -Force
          Copy-Item .\res\terminal\images-rdm .\res\terminal\images-Pre -Recurse -Force

          $Params = @{
            MarkdownNoticePath = ".\NOTICE.md";
            OutputPath = ".\src\cascadia\CascadiaPackage\NOTICE.html";
          }
          .\build\scripts\Generate-ThirdPartyNotices.ps1 @Params

      - name: Configure Windows Runner
        shell: pwsh
        run: |
          docker system prune -a -f
          New-Item "C:\workspace" -ItemType Directory
          Move-Item ".\WindowsTerminal" "C:\workspace" -Force

      - name: Build Windows Terminal
        shell: pwsh
        working-directory: C:\workspace\WindowsTerminal
        run: |
          $TargetPlatform="${{matrix.arch}}"
          Import-Module .\tools\OpenConsole.psm1
          Set-MsBuildDevEnvironment
          $MSBuildOptions = @(
            "/p:Configuration=Release",
            "/p:Platform=$TargetPlatform",
            "/p:WindowsTerminalBranding=Release",
            "/t:Terminal\CascadiaPackage",
            "/m")
          Invoke-OpenConsoleBuild $MSBuildOptions

      - name: Package Windows Terminal
        shell: pwsh
        working-directory: C:\workspace\WindowsTerminal
        run: |
          $TargetPlatform="${{matrix.arch}}"
          $PackageVersion = "${{github.event.inputs.version}}"
          $PackageName = "WindowsTerminal-${PackageVersion}-${TargetPlatform}"
          Import-Module .\tools\OpenConsole.psm1
          Set-MsBuildDevEnvironment
          $MsixPackage = Get-Item ".\src\cascadia\CascadiaPackage\AppPackages\CascadiaPackage_*_${TargetPlatform}_Test\CascadiaPackage_*_${TargetPlatform}.msix"
          Remove-Item ".\output\${PackageName}" -Recurse -ErrorAction SilentlyContinue
          New-Item ".\output\${PackageName}" -Type Directory -Force | Out-Null
          & makeappx unpack /v /o /p $MsixPackage.FullName /d ".\output\${PackageName}"
          Remove-Item ".\output\${PackageName}\Images" -Recurse
          Compress-Archive ".\output\${PackageName}\*" -DestinationPath "C:\workspace\${PackageName}.zip" -CompressionLevel Optimal

      - name: Upload Windows Terminal package
        uses: actions/upload-artifact@v3
        with:
          name: WindowsTerminal-${{github.event.inputs.version}}-${{matrix.arch}}
          path: C:\workspace\WindowsTerminal-${{github.event.inputs.version}}-${{matrix.arch}}.zip
